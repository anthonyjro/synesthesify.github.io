{"version":3,"sources":["gradients.js","sketch.js","SpPlayer.js","App.js","reportWebVitals.js","index.js"],"names":["GradientCollection","this","g2D","tangerine","green_apple","blue_razz","rainbow","g3D","hot_n_cold","gradients","Sketch2D","p","scale","gradient","current_shape","curr","factor","center","pause","getRndInteger","min","max","Math","floor","random","setup","createCanvas","windowWidth","windowHeight","P2D","loop","updateWithProps","props","gradient_flavor","shape","draw","width","height","renderShape","length","push","translate","stroke","strokeWeight","fill","rotate","frameCount","star","ellipse","clear","square","pop","x","y","radius1","radius2","npoints","angle","TWO_PI","halfAngle","beginShape","a","sx","cos","sy","sin","vertex","endShape","CLOSE","mouseClicked","noLoop","windowResized","resizeCanvas","Sketch3D","tlite","ypos","rgbfill","blite","obj_size","ydir","cameras","light_delta","next_cam","new_color","WEBGL","createCamera","lookAt","pan","move","tilt","setCamera","Color","rgb","array","orbitControl","render3DShape","background","darken","string","specularColor","pointLight","ambientLight","shininess","noStroke","i","rotateX","emissiveMaterial","specularMaterial","box","sphere","torus","doubleClicked","fs","fullscreen","CustomPlayer","useState","is_paused","setPaused","is_active","setActive","undefined","player","setPlayer","newTrack","setNewTrack","currentPos","setCurrPos","intervalId","useRef","myDevId","setDevId","id","name","albumArt","uri","nowPlaying","setNowPlaying","prevPlaying","nextPlaying","notPlaying","setNotPlaying","getCurrentInfo","setPauseAnimation","setDeviceId","useEffect","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","Spotify","Player","getOAuthToken","callback","token","volume","addListener","device_id","console","log","state","paused","current","track_window","current_track","previous","previous_tracks","next","next_tracks","position","artists","album","images","url","clearInterval","setInterval","c","connect","getAnalysisData","alt","style","left","zIndex","Button","variant","hidden","onClick","togglePlay","icon","color","colorPalette","green","_50","grey","_900","Spinner","animation","bad_status_codes","spotifyApi","SpotifyWebApi","LoginModal","Modal","size","centered","Header","closeButton","Title","Body","href","UsageModal","Stack","direction","gap","Card","Img","Text","App","flavor","setFlavor","setShape","visualMode","setVisualMode","loginModalShow","setloginModalShow","usageModalShow","setUsageModalShow","analysisInfo","setAnalysisInfo","key","loudness","tempo","trackInfo","setTrackInfo","pauseAnimation","loggedIn","setLoggedIn","acc_token","setAccToken","c_index","setIndex","in_new_section","setInNewSection","duration","setDuration","current_pos","setCurrentPos","params","e","hashParams","r","q","location","hash","substring","exec","decodeURIComponent","getHashParams","shape_book","s2D","s3D","access_token","setAccessToken","setRefreshToken","refresh_token","transferMyPlayback","then","res","play","err","status","message","className","Navbar","expand","fixed","Container","Brand","Nav","NavDropdown","title","onSelect","ek","Item","eventKey","f","Object","keys","map","flav","shp","sketch","show","onHide","ProgressBar","now","label","String","analysis","song_duration","getAudioAnalysisForTrack","includes","statusCode","track","sections","msec","current_section","in_section","start","findIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","basename","process","path","element"],"mappings":"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","file":"static/js/main.49e3f534.chunk.js","sourcesContent":["export default class GradientCollection {\r\n    constructor() {\r\n        this.g2D = {tangerine: [\r\n            '#fa6e6e',\r\n            '#fb7262',\r\n            '#fb7757',\r\n            '#fc7b4b',\r\n            '#fd7f3f',\r\n            '#fe8333',\r\n            '#fe8828',\r\n            '#ff8c1c'\r\n             ],\r\n            green_apple: [\r\n                '#7bfa6e',\r\n                '#6dfb80',\r\n                '#60fb92',\r\n                '#52fca4',\r\n                '#45fdb6',\r\n                '#37fec8',\r\n                '#2afeda',\r\n                '#1cffec'\r\n            ],\r\n            blue_razz: [\r\n                '#6efaf5',\r\n                '#68daf6',\r\n                '#63bbf8',\r\n                '#5d9bf9',\r\n                '#587bfb',\r\n                '#525bfc',\r\n                '#4d3cfe',\r\n                '#471cff'\r\n            ],\r\n    \r\n            rainbow: [\r\n                '#fb813f',\r\n                '#fafb40',\r\n                '#75fb7e',\r\n                '#00ffde',\r\n                '#9e7bde',\r\n                '#fc45ba',\r\n                '#fc4646'\r\n            ]}\r\n        \r\n        this.g3D = {\r\n            rainbow: [\r\n                '#fb813f',\r\n                '#fafb40',\r\n                '#75fb7e',\r\n                '#00ffde',\r\n                '#9e7bde',\r\n                '#fc45ba',\r\n                '#fc4646'\r\n            ],\r\n        \r\n            hot_n_cold: [\r\n                '#f26601',\r\n                '#eb822e',\r\n                '#d9ddc7',\r\n                '#a2d4d0',\r\n                '#66cbdf'\r\n            ]\r\n        }\r\n    }\r\n    \r\n}","import GradientCollection from './gradients.js' \r\nimport Color from 'color';\r\n/* \r\n* Object containing arrays of gradients expressed  \r\n* as hexadecimal colors \r\n*/\r\nconst gradients = new GradientCollection();\r\n// * Main function for the p5 component of the app\r\n\r\nexport function Sketch2D(p){\r\n  \r\n  let scale = 40.0; // Sets current scale for the visual being rendered\r\n  let fillcolor = 'black';\r\n  let gradient = gradients.g2D['tangerine']; // Current gradient selected\r\n  let current_shape = 'star'; // Current shape for the visual\r\n  let curr = 0; // Variable for iterating through gradient list \r\n  let factor = 0.2; // Speed at which shape increases/decreses size\r\n  let maxscale = 10.0; // Maximum size for shape\r\n  let minscale = 0.0; // Minimum \"\"\r\n  let center = [0,0];\r\n  let pause = false;\r\n\r\n  function getRndInteger(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n  }\r\n\r\n  /* Function that creates the canvas and sets animation to loop */\r\n  p.setup = () => {\r\n      p.createCanvas(p.windowWidth, p.windowHeight, p.P2D);\r\n      p.loop();\r\n    }\r\n  \r\n  /* Updates values with props fed in by main app */\r\n  p.updateWithProps = props => {\r\n    if(props.gradient_flavor){\r\n        gradient = gradients.g2D[props.gradient_flavor];\r\n      }\r\n\r\n      if(props.shape){\r\n        current_shape = props.shape;\r\n      }\r\n\r\n      if(props.factor && props.scale){\r\n        factor =  (props.factor / (60.0) * 0.25);\r\n        scale = (-10.0) * props.scale;\r\n      }\r\n\r\n      pause = props.pause;\r\n  };\r\n    \r\n  p.draw = () => {\r\n    if(scale > maxscale){ // Shrink once max is reached\r\n      scale = maxscale;\r\n      factor *= -1;\r\n    } else if(scale < minscale){ // Grow once min is reached\r\n      scale = minscale;\r\n      factor *= -1;\r\n      center = [getRndInteger(-p.width/2, p.width/2),getRndInteger(-p.height/2, p.height/2)]\r\n    }\r\n\r\n    p.renderShape();\r\n    scale += factor;\r\n    curr = (curr + 1) % gradient.length;\r\n  }\r\n\r\n    /* Function that renders the currently selected shape. */\r\n  p.renderShape = () => {\r\n    p.push();\r\n    p.translate(p.width/2, p.height/2)\r\n    \r\n    p.stroke(gradient[curr]);\r\n    p.strokeWeight(4);\r\n    p.fill(fillcolor);\r\n    switch(current_shape){\r\n      case 'star':\r\n        p.rotate(p.frameCount / -100.0);\r\n        p.star(0, 0, 15*scale, 35*scale, 5);\r\n        break;\r\n      case 'circle':\r\n        p.ellipse(center[0], center[1], 35*scale, 35*scale);\r\n        if(center[0] === 0 && center[1] === 0){\r\n          p.clear();\r\n        }\r\n        break;\r\n      case 'square':\r\n        p.rotate(p.frameCount / -100.0);\r\n        p.square(0,0,35*scale);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    p.pop();\r\n  }\r\n\r\n  p.star = (x, y, radius1, radius2, npoints) => {\r\n    let angle = p.TWO_PI / npoints;\r\n    let halfAngle = angle / 2.0;\r\n    p.beginShape();\r\n    for (let a = 0; a < p.TWO_PI; a += angle) {\r\n      let sx = x + p.cos(a) * radius2;\r\n      let sy = y + p.sin(a) * radius2;\r\n      p.vertex(sx, sy);\r\n      sx = x + p.cos(a + halfAngle) * radius1;\r\n      sy = y + p.sin(a + halfAngle) * radius1;\r\n      p.vertex(sx, sy);\r\n    }\r\n    p.endShape(p.CLOSE);\r\n  }\r\n\r\n  p.mouseClicked = () => \r\n  {\r\n    if(pause){\r\n      p.noLoop();\r\n    } else {\r\n      p.loop();\r\n      p.clear();\r\n    }\r\n    \r\n  };\r\n\r\n  p.windowResized = () => {\r\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\r\n  };\r\n}\r\n\r\nexport function Sketch3D(p){\r\n\r\n  // let scale = 40.0; // Sets current scale for the visual being rendered\r\n  let gradient = gradients.g3D['rainbow']; // Current gradient selected\r\n  let current_shape = 'ball'; // Current shape for the visual\r\n  let curr = 0; // Variable for iterating through gradient list \r\n  let factor = 10; // Speed at which shape increases/decreses size\r\n  let tlite, blite = [0,0];\r\n\r\n  let obj_size = 120;\r\n  let boundary = 3.2;\r\n  let ydir = 1;\r\n  let ypos;\r\n  let rgbfill;\r\n\r\n  let cameras = [];\r\n  let pause;\r\n\r\n  let light_delta = 0;\r\n\r\n  let next_cam = 0;\r\n\r\n  let new_color = 0;\r\n\r\n  p.setup = () => {\r\n    p.createCanvas(p.windowWidth, p.windowHeight, p.WEBGL);\r\n    p.loop();\r\n    tlite = [0, 75 - p.height / 2];\r\n    blite = [0, 700 - p.height / 2];\r\n    ypos = p.height / 2;\r\n    rgbfill = [0,0,0];\r\n    cameras[0] = p.createCamera();    \r\n    cameras[1] = p.createCamera();  \r\n    cameras[2] = p.createCamera();\r\n    cameras[0].lookAt(500,0,0);\r\n    cameras[1].lookAt(500,0,0);\r\n    cameras[1].lookAt(500,0,0);\r\n    cameras[1].pan(1.5)\r\n    cameras[1].move(1000,0,1000);\r\n    cameras[2].move(500,-1000,0);\r\n    cameras[2].tilt(1);\r\n    \r\n    p.setCamera(cameras[0]);\r\n  }\r\n\r\n  /* Updates values with props fed in by main app */\r\n  p.updateWithProps = props => {\r\n    if(props.gradient_flavor){\r\n      gradient = gradients.g3D[props.gradient_flavor];\r\n      rgbfill = Color(gradient[new_color]).rgb().array();\r\n    }\r\n\r\n    if(props.shape){\r\n      current_shape = props.shape;\r\n    }\r\n\r\n    if(props.factor){\r\n      factor =  (props.factor / 60.0 * 0.25) * 60;\r\n      // scale = (-10.0) * props.scale;\r\n    }\r\n\r\n    pause = props.pause;\r\n  };\r\n\r\n  p.draw = () => {\r\n    p.orbitControl();\r\n    p.render3DShape();\r\n    cameras[0].move(0,0,Math.sin(p.frameCount / 120)*5);\r\n    cameras[1].move(0,0,Math.cos(p.frameCount / 120)*5);\r\n    cameras[2].move(0,0,Math.cos(p.frameCount / 120)*5);\r\n    if(p.frameCount % 120 === 0){\r\n      next_cam = (next_cam + 1) % cameras.length;\r\n      p.setCamera(cameras[next_cam]);\r\n    }\r\n    curr = (curr + 1) % gradient.length;\r\n  }\r\n  p.render3DShape = () => {\r\n    p.background(Color(gradient[new_color]).darken(0.7).rgb().string());\r\n    bouncer();\r\n    p.specularColor(...rgbfill);\r\n    p.pointLight(...rgbfill, ...tlite, 100);\r\n    p.specularColor(...rgbfill);\r\n    p.pointLight(...rgbfill, ...blite, 50);\r\n    p.ambientLight(50);\r\n    p.shininess(255);\r\n    p.noStroke(255);\r\n    for (let i = 0; i < gradient.length; i++) {\r\n      p.push();\r\n      p.rotateX(p.frameCount * 0.01);\r\n      p.translate((obj_size+10), ypos);\r\n      if(i % 2 === light_delta){\r\n        p.emissiveMaterial(...Color(gradient[i]).rgb().array());\r\n      } else {\r\n        p.specularMaterial(...Color(gradient[i]).rgb().array());\r\n      }\r\n      \r\n      switch(current_shape){\r\n        case 'box':\r\n          p.box(obj_size);\r\n          break;\r\n        case 'ball':\r\n          p.sphere(obj_size);\r\n          break;\r\n        case 'donut':\r\n          p.torus(obj_size, 15);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      \r\n    } p.pop();\r\n  }\r\n\r\n  function bouncer(){\r\n    ypos += ydir * factor;\r\n    if(ypos > p.height - obj_size * boundary || ypos < -p.height + obj_size * boundary){\r\n      ydir *= -1;\r\n      new_color = (new_color + 1) % gradient.length;\r\n      light_delta = (light_delta + 1) % 2;\r\n      rgbfill = Color(gradient[new_color]).rgb().array();\r\n    }\r\n  }\r\n\r\n  p.mouseClicked = () => \r\n  {\r\n    if(pause){\r\n      p.noLoop();\r\n    } else {\r\n      p.loop();\r\n    }\r\n    \r\n  };\r\n\r\n  p.doubleClicked = () => {\r\n    let fs = p.fullscreen();\r\n    p.fullscreen(!fs);\r\n  };\r\n\r\n  p.windowResized = () => {\r\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\r\n  };\r\n\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Button, Spinner } from 'react-bootstrap';\r\nimport MaterialIcon, {colorPalette} from 'material-icons-react';\r\nimport './App.css';\r\n\r\nconst SDK_SOURCE = 'https://sdk.scdn.co/spotify-player.js';\r\n\r\nexport default function CustomPlayer(props){\r\n\r\n    const [is_paused, setPaused] = useState(true);\r\n    const [is_active, setActive] = useState(false);\r\n    const [player, setPlayer] = useState(undefined);\r\n    const [newTrack, setNewTrack] = useState(false);\r\n    const [currentPos, setCurrPos] = useState(0.0);\r\n    const intervalId = useRef(undefined);\r\n    const [myDevId, setDevId] = useState('');\r\n    const [nowPlaying, setNowPlaying] = useState({\r\n        /* \r\n         * object: nowPlaying: An object defining the track currently playing in the browser\r\n         * id - the Spotify id for the track currently playing\r\n         * name - the name of the track currently playing (format: <name - artist>)\r\n         * albumArt - album art for the track currently playing\r\n         * uri - URI where track can be found in Spotify\r\n         */\r\n          id: '',\r\n          name: 'Not Checked',\r\n          albumArt: './sadface.png',\r\n          uri: ''\r\n      });\r\n    const [notPlaying, setNotPlaying] = useState({\r\n        prevPlaying: 'empty.png',\r\n        nextPlaying: 'empty.png'\r\n    })\r\n    const getCurrentInfo = props.getCurrentInfo;\r\n    const setPauseAnimation = props.setPauseAnimation;\r\n    const setDeviceId = props.setDeviceId;\r\n\r\n    useEffect(() => {\r\n        const script = document.createElement(\"script\");\r\n        script.src = SDK_SOURCE;\r\n        script.async = true;\r\n\r\n        document.body.appendChild(script);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(!is_paused){\r\n            getCurrentInfo(currentPos);\r\n        }\r\n    }, [currentPos, getCurrentInfo, is_paused])\r\n    \r\n    useEffect(() => {\r\n        \r\n        window.onSpotifyWebPlaybackSDKReady = () => {\r\n            const player = new window.Spotify.Player({\r\n                name: 'Synesthesify',\r\n                getOAuthToken: callback => {callback(props.token);},\r\n                volume: 0.5\r\n            })\r\n\r\n        setPlayer(player);\r\n\r\n        player.addListener('ready', ({ device_id }) => {\r\n            console.log('Ready with Device ID', device_id);\r\n            setDevId(device_id);\r\n        });\r\n\r\n        player.addListener('not_ready', ({ device_id }) => {\r\n            console.log('Device ID has gone offline', device_id);\r\n        });\r\n\r\n        player.addListener('player_state_changed', ( state => {\r\n\r\n            if (!state) {\r\n                setActive(false);\r\n                return;\r\n            }\r\n            \r\n            setPaused(state.paused);\r\n            if(!state.paused){\r\n                let current = state.track_window.current_track;\r\n                let previous = state.track_window.previous_tracks[0];\r\n                let next = state.track_window.next_tracks[0];\r\n                setCurrPos(state.position / 1000);\r\n                console.log(`Now playing - ${current.name}`);\r\n                setNowPlaying(\r\n                    {id: current.id,\r\n                    name: `${current.name} - ${current.artists[0].name}`,\r\n                    albumArt: current.album.images[0].url, \r\n                    uri: current.uri}\r\n                );\r\n                setNotPlaying(\r\n                   { prevPlaying: previous ? previous?.album.images[0].url : 'empty.png',\r\n                    nextPlaying: next ? next?.album.images[0].url : 'empty.png'}\r\n                )\r\n\r\n                if(intervalId.current){\r\n                    clearInterval(intervalId.current);\r\n                }\r\n                setNewTrack(true);\r\n                intervalId.current = setInterval(() => {\r\n                    setCurrPos(c => c + 2);\r\n                }, 2000);\r\n            }\r\n            setActive(true);\r\n        }));\r\n\r\n        player.connect();\r\n\r\n    };}, [props.token]);\r\n\r\n    if(!is_active){\r\n        return(\r\n            <div id='playback'>\r\n            <Spinner animation=\"border\" variant=\"light\" /> <h4> Waiting for connection... <br></br></h4>\r\n            <Button variant=\"secondary\" id=\"start-playback\" onClick={() => {setDeviceId(myDevId)}}>Start</Button>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n\r\n    else{\r\n        if(newTrack){\r\n            props.getAnalysisData(nowPlaying.id);\r\n            setNewTrack(false);\r\n        }\r\n\r\n        if(is_paused){\r\n            if(intervalId.current){\r\n                clearInterval(intervalId.current);\r\n            }\r\n        }\r\n        \r\n        return(\r\n        <div id='playback'>\r\n            <div>Now Playing: {nowPlaying.name}</div>\r\n            <div><img src={notPlaying.prevPlaying} alt='Previous Album' style={{ position: 'relative', left: '51px', height: 100, width: 100 }}/> \r\n            <img src={nowPlaying.albumArt} alt='Album Art' style={{ position: 'relative', height: 150, zIndex: 1 }}/>\r\n            <img src={notPlaying.nextPlaying} alt='Next Album' style={{ position: 'relative', left: '-48px', height: 100, width: 100 }}/></div>  \r\n            <Button variant='success' id=\"btn-spotify\" hidden={is_paused} onClick={() => { player.togglePlay(); setPauseAnimation(!is_paused); }}>\r\n                <MaterialIcon icon=\"play_arrow\"  color={colorPalette.green._50}/> \r\n            </Button>\r\n            <Button variant='secondary' id=\"btn-spotify\" hidden={!is_paused} onClick={() => { player.togglePlay(); setPauseAnimation(!is_paused); }}>\r\n                <MaterialIcon icon=\"pause\"  color={colorPalette.grey._900}/>\r\n            </Button>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    \r\n}\r\n      \r\n    ","import React, { useEffect, useState } from 'react';\nimport { Nav, NavDropdown, Container, Modal, Button, \n  Navbar, ProgressBar, Stack, Card } from 'react-bootstrap';\nimport './App.css';\nimport { ReactP5Wrapper } from \"react-p5-wrapper\";\nimport { Sketch2D, Sketch3D } from './sketch.js';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport CustomPlayer from './SpPlayer.js';\nimport GradientCollection from './gradients.js';\n\nconst gradients = new GradientCollection();\nconst bad_status_codes = [204, 404, 403]; // 204 is No Content, 404 is Not Found, 403 is Forbidden\nconst spotifyApi = new SpotifyWebApi(); // Spotify Web API object\n\n/* \n* function: getHashParams()\n* params: none \n* does: Retrieves parameters from window \n*/\nfunction getHashParams() {\n  var hashParams = {};\n\n  // Regex to retrieve parameters from window\n  var e, r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n  e = r.exec(q)\n  while (e) {\n     hashParams[e[1]] = decodeURIComponent(e[2]);\n     e = r.exec(q);\n  }\n  return hashParams;\n}\n\n/* \n* function: LoginModal \n* @param props - List of values obtained from component\n* does: Show a modal directing the user to log in with Spotify\n*/\nfunction LoginModal(props){\n  return(\n    <Modal\n    {...props}\n    size=\"lg\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Log in with Spotify\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Button variant=\"success\" href='http://localhost:8888/login'>Login</Button>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nfunction UsageModal(props){\n  return(\n    <Modal\n    {...props}\n    size=\"md\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    centered>\n      <Modal.Header closeButton>\n        <Modal.Title>\n            Usage\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Stack direction=\"horizontal\" gap={3}>\n        <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n        <Card.Body>\n          <Card.Title>Card Title</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n        <Card.Body>\n          <Card.Title>Card Title</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n        <Card.Body>\n          <Card.Title>Card Title</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the\n            bulk of the card's content.\n          </Card.Text>\n        </Card.Body>\n        </Stack>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\n\nfunction App() {\n  const [flavor, setFlavor] = useState(\"rainbow\"); // color gradient for the current visual\n  const [shape, setShape] = useState(\"box\"); /* shape - shape for the current visualize */\n  const [visualMode, setVisualMode] = useState(\"s3D\");\n  const [loginModalShow, setloginModalShow] = useState(false); // bool for displaying login modal \n  const [usageModalShow, setUsageModalShow] = useState(false); // bool for displaying usage modal \n  const [analysisInfo, setAnalysisInfo] = useState({});\n  const [trackInfo, setTrackInfo] = useState({\n    key: -1,\n    loudness: 0,\n    tempo: 0\n  });\n  const [device_id, setDeviceId] = useState('');\n  const [pauseAnimation, setPauseAnimation] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false); \n  const [acc_token, setAccToken] = useState(''); // access token required to connect with Spotify\n  const [c_index, setIndex] = useState(0);\n  const [in_new_section, setInNewSection] = useState(false);\n  const [duration, setDuration] = useState(1.0);\n  const [current_pos, setCurrentPos] = useState(0.0);\n  const params = getHashParams();\n  const shape_book = {s2D: ['star', 'circle', 'square'],\n                      s3D: ['box', 'ball', 'donut']};\n\n  useEffect(() => {\n    if(params.access_token) {\n      // Retrieve and set access token, retrieve refresh token, and set logged in status\n      spotifyApi.setAccessToken(params.access_token);\n      setAccToken(params.access_token);\n      spotifyApi.setRefreshToken(params.refresh_token);\n      setLoggedIn(true);\n    }\n  }, [params]);\n\n\n  useEffect(() => {\n    spotifyApi.transferMyPlayback([device_id])\n    .then((res) => {\n      spotifyApi.play()\n      .then(() => {\n        console.log('Playback started');\n      }, (err) => {console.log(`Error occured: ${err?.status} - ${err?.message}`)});\n    }, (err) => {console.log(`Error occured: ${err?.status} - ${err?.message}`)})\n  }, [device_id]);\n\n  /* \n  * function: getTrackAnalysis \n  * @param - id: the Spotify id for the track currently playing\n  * does: GET request for general info related to the track currently playing in browser\n  */\n  const getTrackAnalysis = (id) => {\n    let analysis, song_duration;\n      spotifyApi.getAudioAnalysisForTrack(id)\n      .then((res) => {\n      if(!bad_status_codes.includes(res.statusCode)){ // Check for error codes\n        song_duration = res.body.track.duration;\n        analysis = res.body.sections;\n        setAnalysisInfo(analysis);\n        if(song_duration > 0){\n          setDuration(song_duration);\n        }\n        setIndex(0);\n        setInNewSection(true);\n        }\n      }, (err) => {console.log(`Error occured: ${err?.status} - ${err?.message}`)});\n  }\n\n  const getSegmentValues = (msec) => {\n    if(analysisInfo)\n    {\n      let current_section = analysisInfo[c_index];\n      setCurrentPos(msec);\n      if(current_section)\n      {\n        let in_section = (msec >= current_section.start) && (msec <= current_section.start + current_section.duration);\n        if(in_new_section){\n          setTrackInfo({\n            key: current_section.key,\n            loudness: current_section.loudness,\n            tempo: current_section.tempo\n          });\n          setInNewSection(false);\n        } \n        \n        if (!in_section) {\n          let next = analysisInfo.findIndex((e) => {\n            return (msec >= e.start) && (msec <= e.start + e.duration);\n          });\n          setIndex(next);\n          setInNewSection(true);}\n        }\n    }\n\n    else{\n      setTrackInfo({\n        key: -1,\n        loudness: 0,\n        tempo: 0\n      });\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar expand=\"lg\" variant='dark' fixed='top'>\n          <Container>\n            <Navbar.Brand className='nav-brand' href='/'>\n              Synesthesify\n            </Navbar.Brand>\n            <Nav className=\"me-auto\">\n              <NavDropdown title=\"Visual Mode\" className='nav-dropdown' onSelect={(ek) => {\n                setVisualMode(ek); setFlavor(\"rainbow\"); setShape(shape_book[ek][0]);}}>\n                <NavDropdown.Item className='nav-drop-item' eventKey={'s2D'}>2D Mode</NavDropdown.Item>\n                <NavDropdown.Item className='nav-drop-item' eventKey={'s3D'}>3D Mode</NavDropdown.Item>\n              </NavDropdown>\n              <NavDropdown title={`Choose your flavor`} className='nav-dropdown' onSelect={(f) => setFlavor(f)}>\n                {(visualMode === \"s2D\" && Object.keys(gradients.g2D).map((flav) =>\n                {\n                  return (<NavDropdown.Item className='nav-drop-item' eventKey={flav}>{flav}</NavDropdown.Item>);\n                })) || \n                (visualMode === \"s3D\" && Object.keys(gradients.g3D).map((flav) =>\n                {\n                  return (<NavDropdown.Item className='nav-drop-item' eventKey={flav}>{flav}</NavDropdown.Item>);\n                }))}\n              </NavDropdown>\n              <NavDropdown title={`Choose your shape`} className='nav-dropdown' onSelect={(f) => setShape(f)}>\n                {shape_book[visualMode].map((shp) =>\n                {\n                  return (<NavDropdown.Item className='nav-drop-item' eventKey={shp}>{shp}</NavDropdown.Item>);\n                })}\n              </NavDropdown>\n              <Nav.Item className='nav-link'>\n                <p onClick={() => setUsageModalShow(true)}>Usage</p>\n              </Nav.Item>\n            </Nav>\n          </Container>\n        </Navbar>\n        \n      </header>\n      <body className='App-body'>\n      <div id='p5visual'>\n          {/* The visual component is rendered using p5.js. For more info: https://p5js.org/ */}\n          {(visualMode === \"s2D\" && \n          <ReactP5Wrapper \n          sketch={Sketch2D} \n          gradient_flavor={flavor} \n          shape={shape}\n          factor={trackInfo.tempo}\n          scale={trackInfo.loudness}\n          pause={pauseAnimation}/>) ||\n          (visualMode === \"s3D\" &&\n          <ReactP5Wrapper \n          sketch={Sketch3D} \n          gradient_flavor={flavor} \n          shape={shape}\n          factor={trackInfo.tempo}\n          scale={trackInfo.loudness}\n          pause={pauseAnimation}/>)}\n        </div>\n        <LoginModal\n        show={loginModalShow}\n        onHide={() => setloginModalShow(false)} \n        />\n        <UsageModal\n        show={usageModalShow}\n        onHide={() => setUsageModalShow(false)}\n        />\n        {/* Music control section of the app below */}\n        <div className='sp-player' id='now_playing'>\n          {/* The elements below are conditioned to appear depending on user's login status */}\n          \n          {loggedIn && <ProgressBar variant='success' now={(current_pos/duration)*100} label={` \n          ${Math.floor(current_pos/60)}:${current_pos%60 < 10 ? '0'+String(Math.floor(current_pos%60)) : Math.floor(current_pos%60)} `}/>}\n          <Button variant='success' hidden={loggedIn} onClick={() => setloginModalShow(true)}>\n            Log in\n          </Button>\n          {loggedIn && <CustomPlayer token={acc_token} getAnalysisData={getTrackAnalysis} \n          getCurrentInfo={getSegmentValues} \n          setPauseAnimation={setPauseAnimation}\n          setDeviceId={setDeviceId} />}\n        </div>\n      </body>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Routes>\n      <Route path=\"/\" element={<App />} />\n    </Routes>\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}